version: '3.8'

services:
  mysqldb:
    image: mysql
    tty: true
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_BOT_DATABASE: ${DB_BOT_DATABASE}
      DB_BOT_USERNAME: ${DB_BOT_USERNAME}
      DB_BOT_PASSWORD: ${DB_BOT_PASSWORD}
    networks:
      - app_server
    volumes:
      - db:/var/lib/mysql
      - ../../docker/mysql:/docker-entrypoint-initdb.d
    env_file:
      - ../../.env

  app-server:
    depends_on:
      - mysqldb
    image: 127.0.0.1:5000/app-server
    build:
      context: ./
      dockerfile: DockerFile
      target: production
    environment:
      NODE_ENV: production
      DB_HOST: mysqldb
      DB_BOT_HOST: mysqldb
      PROJECT_HOST: ${PROJECT_HOST}
      STATIC_HOST: static.${PROJECT_HOST}
      APP_ENV: ${APP_ENV}
      SERVER_HOST: ${SERVER_HOST}
    volumes:
      - uploads:/usr/src/uploads
    env_file:
      - ../../.env
    networks:
      - global-network
      - app_server
    logging:
      driver: json-file
      options:
        max-size: "100k"
        max-file: "5"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 2
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=global-network"
        - "traefik.http.services.app-server.loadbalancer.server.port=3001"
        - "traefik.http.services.app-server.loadbalancer.sticky=true"
        - "traefik.http.services.app-server.loadbalancer.sticky.cookie.name=StickyCookie"
        - "traefik.http.services.app-server.loadbalancer.sticky.cookie.secure=true"

        - "traefik.http.routers.app-server.tls.certresolver=mainresolver"
        - "traefik.http.routers.app-server.entrypoints=websecure"
        - "traefik.http.routers.app-server.rule=Host(`${SERVER_HOST}`) && (PathPrefix(`/api`) || PathPrefix(`/graphql`) || PathPrefix(`/socket.io`))"

        - "traefik.http.routers.httpapp-server.entrypoints=web"
        - "traefik.http.routers.httpapp-server.rule=Host(`${SERVER_HOST}`) && (PathPrefix(`/api`) || PathPrefix(`/graphql`) || PathPrefix(`/socket.io`))"
    healthcheck:
      test: [ "CMD", "curl", "-fsS", "http://localhost:3001/api/health/check" ]
      interval: 15s
      timeout: 10s
      retries: 2
      start_period: 1m

volumes:
  db:
    driver: local
  uploads:
    name: uploads
    external: true

networks:
  app_server:
    driver: overlay
  global-network:
    name: global-network
    external: true
